#ifndef LLVM_LIB_TARGET_M86_MCTARGETDESC_M86INSTPRINTER_H
#define LLVM_LIB_TARGET_M86_MCTARGETDESC_M86INSTPRINTER_H

#include <cstdint>
#include <llvm/ADT/StringRef.h>
#include <llvm/MC/MCAsmInfo.h>
#include <llvm/MC/MCInst.h>
#include <llvm/MC/MCInstPrinter.h>
#include <llvm/MC/MCInstrInfo.h>
#include <llvm/MC/MCRegister.h>
#include <llvm/MC/MCRegisterInfo.h>
#include <llvm/MC/MCSubtargetInfo.h>
#include <llvm/Support/raw_ostream.h>
#include <utility>

namespace llvm {

class M86InstPrinter : public MCInstPrinter {
public:
  M86InstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                 const MCRegisterInfo &MRI);

  // Autogenerated by tblgen.
  std::pair<const char *, std::uint64_t> getMnemonic(const MCInst *MI) override;
  void printInstruction(const MCInst *MI, std::uint64_t Address,
                        raw_ostream &O);
  static const char *getRegisterName(MCRegister Reg);

  void printRegName(raw_ostream &OS, MCRegister Reg) const override;
  void printInst(const MCInst *MI, std::uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;
  void printBranchOperand(const MCInst *MI, std::uint64_t Address,
                          unsigned OpNo, raw_ostream &O);
  void printOperand(const MCInst *MI, int OpNo, raw_ostream &OS);
};

} // end namespace llvm

#endif // LLVM_LIB_TARGET_M86_MCTARGETDESC_M86INSTPRINTER_H
